# Инициализация модели детекции
detection_rt_detr = RT_DETR(use_local=True)

# ===== Получение и логирование изображения с камеры =====
image_data, _ = client.getImages("front_center", [airgen.ImageType.Scene])[0]
rgb_image = cv2.cvtColor(image_data, cv2.COLOR_RGB2BGR)  # Преобразование в BGR для OpenCV

# ===== Распознавание препятствий =====
result = detection_rt_detr.run(input=rgb_image.copy(), confidence_threshold=0.3)  # Снижение порога доверия

# Проверяем, есть ли объекты в результате детекции
if isinstance(result, dict) and 'boxes' in result and len(result['boxes']) > 0:
    boxes = result['boxes']
    labels = result['labels']
    
    image_with_boxes = rgb_image.copy()

    for i, box in enumerate(boxes):
        x, y, w, h = box
        cv2.rectangle(image_with_boxes, (x, y), (x + w, y + h), (0, 255, 0), 2)
        cv2.putText(image_with_boxes, f"Object {i+1}", (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

        rr.log(
            f"drone/obstacle_{i}",
            rr.Boxes2D(np.array([[x, y, w, h]]), labels=["Obstacle"])
        )

    rr.log("drone/camera", rr.Image(image_with_boxes))

else:
    print("❗ Объекты не обнаружены.")







ЭТО РАБОТАЕТ